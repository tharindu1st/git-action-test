name: UI test build
on: 
  workflow_dispatch:
    inputs:
      component_repo:
        description: 'component repo'     
        required: true
        default: 'wso2/carbon-apimgt'
      component_branch:
        description: 'Component branch Name'     
        required: true
        default: 'master'
      ui_repo:
        description: 'Ui repo'     
        required: true
        default: 'wso2/apim-apps'
      ui_branch:
        description: 'Ui branch Name'     
        required: true
        default: 'master'        
      product_repo:
        description: 'product repo'     
        required: true
        default: 'wso2/product-apim'
      product_branch:
        description: 'Product branch Name'     
        required: true
        default: 'master'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Run hostname
      run: hostname
    - name: Fix host entry
      run: sudo echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
    - name: Show hosts
      run: cat /etc/hosts
    - name: Checkout module-refactor
      uses: actions/checkout@v2
      with: 
        repository: ${{ github.event.inputs.component_repo }}
        ref: refs/heads/${{ github.event.inputs.component_branch }}
        path: carbon-apimgt
        
    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt' # See 'Supported distributions' for available options
        java-version: 8.0.282+8
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2
        restore-keys: ${{ runner.os }}-m2
    - name: Build carbon-apimgt with Test.
      run: mvn clean install -Dmaven.tests.skip=true --file carbon-apimgt/pom.xml
    - name: Get carbon.apimgt.version
      run: mvn help:evaluate -Dexpression=project.version -q --file carbon-apimgt/pom.xml -DforceStdout > ../CARBON_APIMGT_VERSION_FILE
    - name: Print carbon.apimgt.version
      run: |
        echo $(cat ../CARBON_APIMGT_VERSION_FILE)
    - name: Checkout Apim-APPS
      uses: actions/checkout@v2
      with: 
        repository: ${{ github.event.inputs.ui_repo }}
        ref: refs/heads/${{ github.event.inputs.ui_branch }}
        path: apim-apps
    - name: Build apim-apps with Test.
      run: mvn clean install -Dmaven.test.skip=true --file apim-apps/pom.xml
    - name: Get apim.apps.version
      run: mvn help:evaluate -Dexpression=project.version -q --file apim-apps/pom.xml -DforceStdout > ../APIM_APPS_VERSION_FILE
    - name: Print apim.apps.version
      run: |
        echo $(cat ../APIM_APPS_VERSION_FILE)
    - name: Checkout Product-APIM
      uses: actions/checkout@v2
      with: 
        repository: ${{ github.event.inputs.product_repo }}
        ref: refs/heads/${{ github.event.inputs.product_branch }}
        path: product-apim
    - name: Build Product-Apim with Maven
      run: mvn clean install -Dcarbon.apimgt.version=$(cat ../CARBON_APIMGT_VERSION_FILE) -Dcarbon.apimgt.ui.version=$(cat ../APIM_APPS_VERSION_FILE) -fae --file product-apim/pom.xml -DskipBenchMarkTest=true -DskipIntegrationTests=true -Dmaven.test.skip=true
    - name: Get product.version
      run: mvn help:evaluate -Dexpression=project.version -q --file product-apim/pom.xml -DforceStdout > ../PRODUCT_APIM_VERSION_FILE
    - name: Print product.apim.version
      run: |
        echo $(cat ../PRODUCT_APIM_VERSION_FILE)
    - name: start APIM server
      run: |
        unzip product-apim/modules/distribution/product/target/wso2am-$(cat ../PRODUCT_APIM_VERSION_FILE).zip
        sh wso2am-$(cat ../PRODUCT_APIM_VERSION_FILE)/api-manager.sh start
        sleep 5m # sleep for 5 min to start the server
        nc -zv localhost 9443
        mvn clean install --file apim-apps/tests/pom.xml

    - name: Google Chat Notification
      uses: Co-qn/google-chat-notification@releases/v1
      with:
        name: Build
        url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
        status: ${{ job.status }}
      if: always()
